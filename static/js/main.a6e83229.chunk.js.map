{"version":3,"sources":["components/navbar/Navbar.Component.jsx","components/mixed/mixed.component.jsx","images/Lockdown-Timeline-UK.jpg","components/modal/modal.component.jsx","App2.jsx","index.js"],"names":["NavBar","Navbar","bg","expand","sticky","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","target","Mixed","useState","chartData","setChartData","useEffect","covCase","covDeath","covDate","axios","get","then","res","result","data","reverse","dataObj","push","parseInt","newCasesByPublishDate","newDeaths28DaysByPublishDate","date","labels","datasets","label","yAxisID","backgroundColor","fill","borderWidth","catch","err","console","log","message","chart","style","height","width","options","text","display","elements","point","radius","scales","yAxes","position","max","min","autoSkip","ticks","xAxes","MyVerticallyCenteredModal","Modal","props","size","aria-labelledby","centered","Image","src","image","alt","Button","variant","onClick","onHide","ModalComponent","modalShow","setModalShow","show","App2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e83229.chunk.js","sourcesContent":["import {Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Covid-19 Tracker</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              {/* <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link> */}\r\n              <NavDropdown title=\"Where to?\" id=\"basic-nav-dropdown\">\r\n                {/* <NavDropdown.Item component={CovidDeaths.Component}>Action</NavDropdown.Item>\r\n                <NavDropdown.Item component={CovidDeaths.Component}>\r\n                  Deaths\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#cumDeaths/3.3\">\r\n                  Cummulitive Deaths\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider /> */}\r\n                <NavDropdown.Item href=\"https://www.yeomeo.dev\" target=\"_blank\">\r\n                  www.yeomeo.dev\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n}\r\n \r\nexport default NavBar;","import { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst Mixed = () => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  const chart = () => {\r\n    //set variables to pass in as dynamic data\r\n    let covCase = [];\r\n    let covDeath = [];\r\n    let covDate = [];\r\n\r\n    // axios get endpoint\r\n    axios\r\n      .get(\r\n        'https://api.coronavirus.data.gov.uk/v1/data?filters=areaName=England;areaType=nation&structure={\"date\":\"date\",\"name\":\"areaName\",\"code\":\"areaCode\",\"newCasesByPublishDate\":\"newCasesByPublishDate\",\"cumCasesByPublishDate\":\"cumCasesByPublishDate\",\"newDeaths28DaysByPublishDate\":\"newDeaths28DaysByPublishDate\",\"cumDeaths28DaysByPublishDate\":\"cumDeaths28DaysByPublishDate\"}',\r\n      )\r\n      // then we take the response and iterate through the array of objects\r\n      .then((res) => {\r\n        // here we reverse the order that the data comes into the console\r\n        // console.log(res.data.data.reverse());\r\n        let result = res.data.data.reverse();\r\n\r\n        // looping through the data-response and creating a dataObj variable in the process\r\n        for (const dataObj of result) {\r\n          // pushing the parsed dataObj and the field required to the empty array (covCase)\r\n          covCase.push(parseInt(dataObj.newCasesByPublishDate));\r\n          covDeath.push(parseInt(dataObj.newDeaths28DaysByPublishDate));\r\n          // pushing the parsed dataObj and the field required to the empty array (covDate)\r\n          covDate.push(parseInt(dataObj.date));\r\n          // setting the chart data STATE with the chart.js labels and datasets with data: covCase variable\r\n          setChartData({\r\n            // https://www.chartjs.org/docs/latest/getting-started/usage.html for layout requirements\r\n            labels: covDate,\r\n            datasets: [\r\n              {\r\n                label: 'New Covid Cases by Date (England)',\r\n                data: covCase,\r\n                yAxisID: 'A',\r\n                backgroundColor: ['rgb(250, 81, 81)'],\r\n                fill: false,\r\n                borderWidth: 5,\r\n              },\r\n              {\r\n                label: 'New Covid Deaths by Date (England)',\r\n                data: covDeath,\r\n\r\n                yAxisID: 'B',\r\n                backgroundColor: ['rgba(73, 9, 250, 0.973)'],\r\n                fill: true,\r\n                borderWidth: 0.3,\r\n              },\r\n            ],\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    // console.log(covCase, covDate);\r\n  };\r\n\r\n  // put function into a useEffect so that it runs just once on render of the page\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"charts\" id=\"cases\" style={{ height: 400, width: 600 }}>\r\n      <Line\r\n        // passing in the STATE as the data to be rendered\r\n        data={chartData}\r\n        // chart.js options parameters\r\n        options={{\r\n          title: { text: 'Covid', display: true },\r\n          elements: {\r\n            point: {\r\n              radius: 2,\r\n            },\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                id: 'A',\r\n                    position: 'left',\r\n                    max: 250000,\r\n                    min: 0,\r\n                autoSkip: false,\r\n              },\r\n              {\r\n                id: 'B',\r\n                position: 'right',\r\n                ticks: {\r\n                    max: 25000,\r\n                    min: 0,\r\n                  autoSkip: false,\r\n                },\r\n              },\r\n            ],\r\n            xAxes: [\r\n              {\r\n                autoSkip: true,\r\n\r\n                // this section didn't make the difference expected of it. reversing the console.log() did, though!!\r\n                // ticks: {\r\n                //   // reverse: true,\r\n                //   maxTicksLimit: 7,\r\n                //   display: false,\r\n                // },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mixed;\r\n","export default __webpack_public_path__ + \"static/media/Lockdown-Timeline-UK.424c148f.jpg\";","import { useState } from 'react'\r\nimport { Modal, Button, Image } from 'react-bootstrap'\r\nimport image from '../../images/Lockdown-Timeline-UK.jpg'\r\n \r\nexport default Modal;\r\nconst MyVerticallyCenteredModal = (props) => {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      \r\n              \r\n            \r\n\r\n        <Image src={image} alt=\"timeline\" />\r\n            \r\n     \r\n        <Button variant='danger' onClick={props.onHide}>Close</Button>\r\n     \r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport const ModalComponent = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"info\" onClick={() => setModalShow(true)}>\r\n       Lockdown Timeline in the UK (Click Me)\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// export default ModalComponent;","import Navbar from './components/navbar/Navbar.Component';\r\nimport './App.css';\r\nimport Mixed from './components/mixed/mixed.component'\r\n// import CovidCases from './components/cases/CovidCases.component';\r\n// import CumCases from './components/cumCases/CumCases.Component';\r\n// import CumDeathsRate from './components/cumDeaths/CumDeaths.Component';\r\n// import CovidDeaths from './components/deaths/CovidDeaths.Component';\r\n// import GlobalCases from './components/globalPie/GlobalPie.Component';\r\nimport { ModalComponent } from './components/modal/modal.component'\r\n\r\n\r\nconst App2 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar style={{ width: '100vw' }} />\r\n      </div>\r\n        <div className=\"container\">\r\n          <div className=\"charts\">\r\n            <h2 className=\"title\">Coronavirus-19 novel-v2. Data Charts</h2>\r\n          <ModalComponent />\r\n          <Mixed  />\r\n            {/* <CovidCases />\r\n          \r\n          <CovidDeaths />\r\n          <CumCases />\r\n          <CumDeathsRate /> */}\r\n          {/* <GlobalCases /> */}\r\n       \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App2;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App2 from './App2';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}